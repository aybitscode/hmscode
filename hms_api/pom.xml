<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>hms</groupId>
    <artifactId>hms-api</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>HMS API</name>
    <description>HMS APIs are core APIs of the HMS Solution and
        are to be added as dependency to implementing application</description>
    <url>http://maven.apache.org</url>
    <organization>
        <name>Aybits Technologies Inc.,</name>
        <url>http://www.aybits.com/</url>
    </organization>
    <licenses>
        <license>
            <name>GNU Lesser General Public License Version 2.1</name>
            <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>aybits-dev-team</id>
            <name>The Aybits Development Team</name>
            <organization>Aybits Technologies Inc.,</organization>
            <organizationUrl>http://dev.aybits.com/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/aybitscode/hmscode.git</connection>
        <developerConnection>scm:git:git@github.com:aybitscode/hmscode.git</developerConnection>
        <url>http://github.com/aybitscode/hmscode</url>
    </scm>

    <!-- Output to jar format -->
    <packaging>jar</packaging>

    <properties>
        <slf4j.version>1.6.1</slf4j.version>
        <httpclient.version>4.5.2</httpclient.version>
        <xstream.version>1.4.10</xstream.version>
        <jdk.version>10</jdk.version>
        <jodatime.version>2.5</jodatime.version>
        <junit.version>4.11</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <hibernate.version>4.3.11.Final</hibernate.version>
        <spring.version>4.3.7.RELEASE</spring.version>
        <springboot.version>1.3.2.RELEASE</springboot.version>
        <jackson.version>2.9.0</jackson.version>
        <jaxb.version>2.2.7</jaxb.version>
        <dom4j.version>1.6.1</dom4j.version>
        <jaxen.version>1.1.4</jaxen.version>
       <!-- <docker-mysql-image>mysql:5.5.49</docker-mysql-image>-->
        <system-rules.version>1.16.0</system-rules.version>

        <!-- ************************ -->
        <!-- Sonar/Reporting settings -->
        <!-- ************************ -->
        <!-- Sonar/Jacoco integration. Note that these properties need to
            be defined outside the "coverage" profile because we want to be to able to
            execute mvn sonar:sonar without passing a profile -->
        <!-- Tells Sonar to use jacoco for coverage results -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- Jacoco version to use -->
        <jacoco.version>0.7.2.201409121644</jacoco.version>
        <!-- The Sonar Jacoco Listener for JUnit to extract coverage details
            per test -->
        <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
        <!-- Don't let Sonar execute tests. We will ask it to Maven -->
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <!-- Report output directory, in Jenkins use: -Djacoco.outputDir=${WORKSPACE} -->
        <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
        <!-- Jacoco output file for UTs -->
        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located
            for Unit Tests -->
        <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
        <!-- Jacoco output file for ITs -->
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located
            for Integration Tests -->
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
        <sonar.exclusions>**/*Test.java,**/*Tests.java,**/*IT.java</sonar.exclusions>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <buildTimestamp>${maven.build.timestamp}</buildTimestamp>
        <buildId>${project.name}-${project.version}-${buildTimestamp}</buildId>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.175</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.4.7</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.spec.javax.transaction</groupId>
                    <artifactId>jboss-transaction-api_1.2_spec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.spec.javax.transaction</groupId>
                    <artifactId>jboss-transaction-api_1.2_spec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.2</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-collections</groupId>
                    <artifactId>commons-collections</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.7.22</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.btm</groupId>
            <artifactId>btm</artifactId>
            <version>2.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.btm</groupId>
            <artifactId>btm-tomcat55-lifecycle</artifactId>
            <version>2.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20090211</version>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit-assertj</artifactId>
            <version>0.0.15</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.18.1-GA</version>
        </dependency>
        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>${system-rules.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-classloader</artifactId>
            <version>3.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${xstream.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.46</version>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.10</version>
                    <configuration>
                        <sourceExcludes>
                            <sourceExclude>**/.svn/**</sourceExclude>
                        </sourceExcludes>
                        <sourceIncludes>
                            <sourceInclude>**/*.myExtension</sourceInclude>
                        </sourceIncludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.1</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>2.9</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.16</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.4</version>
                    <configuration>
                        <additionalparam>-Xdoclint:none</additionalparam>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.4.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>1.6.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxb2-maven-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.8</version>
                    <configuration>
                        <header>license/license.txt</header>
                        <headerDefinitions>
                            <headerDefinition>license/licenseHeaderDefinition.xml</headerDefinition>
                        </headerDefinitions>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- usage: mvn assertj:generate-assertions -Dassertj.classes=org.bonitasoft.MyClass
                        mvn assertj:generate-assertions -Dassertj.packages=org.bonitasoft.package -->
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
                    <version>2.1.0</version>
                    <configuration>
                        <targetDir>src/test/java</targetDir>
                        <generateAssertions>false</generateAssertions>
                        <generateBddAssertions>false</generateBddAssertions>
                        <generateSoftAssertions>false</generateSoftAssertions>
                        <generateJUnitSoftAssertions>false</generateJUnitSoftAssertions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.18.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <finalName>hms-api</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <!-- Need to redefine the version here, as oss-parent define an old one
                requirePluginVersions of plugin 1.0 does not work with Maven 3.x
                -->
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.3.9,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[1.8,)</version>
                                </requireJavaVersion>
                                <requirePluginVersions>
                                    <phases>clean,initialize,deploy,site</phases>
                                </requirePluginVersions>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Default failsafe configuration -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError</argLine>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${buildId}</finalName>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>package</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
       <!-- <profile>
            <id>package-all</id>
            <modules>
                <module>platform</module>
                <module>services</module>
                <module>bpm</module>
                <module>bonita-test-api</module>
                <module>bonita-integration-tests</module>
            </modules>
            <properties>
                <skipTests>true</skipTests>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>tests</id>
            <properties>
                <maven.javadoc.skip>true</maven.javadoc.skip>
            </properties>
            <modules>
                <module>platform</module>
                <module>services</module>
                <module>bpm</module>
                <module>bonita-test-api</module>
                <module>bonita-integration-tests</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>-->
        <!--<profile>
            <id>sonar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>${jacoco.agent.ut.arg}</argLine>
                            &lt;!&ndash; Listener to show coverage for each test &ndash;&gt;
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <identifierType>org.sonar.java.jacoco.JUnitListener</identifierType>
                                </property>
                            </properties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            &lt;!&ndash; Be aware not to omit ${jacoco.agent.it.arg}
                                if overriding this property in lower-level pom files: &ndash;&gt;
                            <argLine>-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError
                                ${jacoco.agent.it.arg}
                            </argLine>
                            &lt;!&ndash; Listener to show coverage for each test &ndash;&gt;
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <identifierType>org.sonar.java.jacoco.JUnitListener</identifierType>
                                </property>
                            </properties>
                            &lt;!&ndash; workaround to have test report for IT in
                                sonar, see http://stackoverflow.com/a/15567782/936729 &ndash;&gt;
                            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <configuration>
                            <includes>
                                <include>org.bonitasoft.engine.*</include>
                            </includes>
                        </configuration>
                        <executions>
                            &lt;!&ndash; Prepares a variable, jacoco.agent.ut.arg,
                                that contains the info to be passed to the JVM hosting the code being tested. &ndash;&gt;
                            <execution>
                                <id>prepare-ut-agent</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                    <propertyName>jacoco.agent.ut.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>
                            &lt;!&ndash; Prepares a variable, jacoco.agent.it.arg,
                                that contains the info to be passed to the JVM hosting the code being tested. &ndash;&gt;
                            <execution>
                                <id>prepare-it-agent</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.itReportPath}</destFile>
                                    <propertyName>jacoco.agent.it.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${sonar-jacoco-listeners.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>-->
        <profile>
            <id>license</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--&lt;!&ndash; Profiles use to run tests on docker images &ndash;&gt;
        <profile>
            <id>postgres</id>
            <properties>
                <db.vendor>postgres</db.vendor>
                <docker-container-alias>bonita-postgres-IT</docker-container-alias>
            </properties>
            &lt;!&ndash;instance accounts:&ndash;&gt;
            &lt;!&ndash;bonita (user bonita/bpm)&ndash;&gt;
            &lt;!&ndash;business_data (user business_data/bpm)&ndash;&gt;
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>${docker-postgres-image}</name>
                                    <alias>${docker-container-alias}</alias>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>db.random.port:5432</port>
                                        </ports>
                                        <wait>
                                            <time>${docker-timeout}</time>
                                            <log>PostgreSQL init process complete; ready for start up.</log>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <sysprop.bonita.db.vendor>postgres</sysprop.bonita.db.vendor>
                                <sysprop.bonita.bdm.db.vendor>postgres</sysprop.bonita.bdm.db.vendor>
                                <db.vendor>postgres</db.vendor>
                                <db.user>bonita</db.user>
                                <db.password>bpm</db.password>
                                <db.server.port>${db.random.port}</db.server.port>
                            </systemPropertyVariables>
                            <includes>
                                <include>${testSuite.name}</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>-->
        <!--<profile>
            <id>mysql</id>
            <properties>
                <db.vendor>mysql</db.vendor>
                <docker-container-alias>aybits-mysql-dev</docker-container-alias>
            </properties>
            &lt;!&ndash;instance accounts:&ndash;&gt;
            &lt;!&ndash;bonita (user bonita/bpm)&ndash;&gt;
            &lt;!&ndash;business_data (user business_data/bpm)&ndash;&gt;
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>${docker-mysql-image}</name>
                                    <alias>${docker-container-alias}</alias>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <env>
                                            <MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>db.random.port:3306</port>
                                        </ports>
                                        <wait>
                                            <time>300000</time>
                                            <log>MySQL init process done. Ready for start up.</log>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <db.vendor>mysql</db.vendor>
                                <db.user>bonita</db.user>
                                <db.password>root</db.password>
                                <db.server.port>3306</db.server.port>
                            </systemPropertyVariables>
                            <includes>
                                <include>${testSuite.name}</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>-->


    </profiles>
</project>
